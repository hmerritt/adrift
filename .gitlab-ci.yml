stages:
    - test
    - build
    - deploy

variables:
    npm_config_cache: "$CI_PROJECT_DIR/.npm"

# Define a hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache:
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - .npm
        policy: pull

#
# Test
#
test:
    stage: test
    image: node:18-alpine
    extends: .dependencies_cache
    cache:
        policy: pull-push
    before_script:
        - apk update && apk add git bash
        - npm ci --cache .npm --prefer-offline
    script:
        - npm run test:coverage
        - unset CI
        - npm run build
    coverage: /All\sfiles.*?\s+(\d+.\d+)/

#
# Build
#
build:
    stage: build
    image: docker:19.03.1
    extends: .dependencies_cache
    cache:
        policy: pull
    only:
        - tags
    services:
        - name: docker:19.03.1-dind
          command: ["--experimental"]
    before_script:
        - apk update && apk add git bash
        - npm install
        - npm run build
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $CI_REGISTRY/hmerritt/cra:$CI_COMMIT_TAG -t $CI_REGISTRY/hmerritt/cra:latest .
        - docker push $CI_REGISTRY/hmerritt/cra

    after_script:
        - docker logout
