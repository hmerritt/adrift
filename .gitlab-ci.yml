stages:
    - test
    - build
    - release

variables:
    DOCKER_USER: $DOCKER_USER
    DOCKER_TOKEN: $DOCKER_TOKEN
    npm_config_cache: "$CI_PROJECT_DIR/.npm"

# Define a hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache:
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - .npm
        policy: pull

test:
    image: node:18-alpine

    extends: .dependencies_cache
    cache:
        policy: pull-push

    before_script:
        - apk update && apk add git bash
        - npm ci --cache .npm --prefer-offline

    script:
        - npm run test:coverage
        - unset CI
        - npm run build

    coverage: /All\sfiles.*?\s+(\d+.\d+)/

release:
    image: docker:19.03.1
    stage: build

    only:
        - tags

    services:
        - name: docker:19.03.1-dind
          command: ["--experimental"]

    extends: .dependencies_cache
    cache:
        policy: pull

    before_script:
        - apk update && apk add git bash
        - npm install
        - npm run build

    script:
        - docker login -u "$DOCKER_USER" -p "$DOCKER_TOKEN"
        - docker build -t hmerritt/cra:$CI_COMMIT_TAG -t hmerritt/cra:latest .
        - docker push hmerritt/cra

    after_script:
        - docker logout
